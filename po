local ContextActionService = cloneref(game:GetService('ContextActionService'))
local UserInputService = cloneref(game:GetService('UserInputService'))
local TweenService = cloneref(game:GetService('TweenService'))
local HttpService = cloneref(game:GetService('HttpService'))
local RunService = cloneref(game:GetService('RunService'))
local Players = cloneref(game:GetService('Players'))
local Debris = cloneref(game:GetService('Debris'))

local LocalPlayer = Players.LocalPlayer
local mouse = LocalPlayer:GetMouse()

local Connections = {}

function Connections:abadone()
	for _, connection in Connections do
		if typeof(connection) == 'function' then
			connection = nil

			continue
		end

		connection:Disconnect()
		connection = nil
	end
end

local Library = {
	scale_cooldown = false :: boolean,
	open = true :: boolean,
	flags = {} :: any,
	ui = nil :: any,
	scale = 0,
	current_tab = nil,
	mobile = table.find({
		Enum.Platform.IOS, 
		Enum.Platform.Android
	}, UserInputService:GetPlatform()),
	disconnected = false :: boolean,
	can_be_optimized = false :: boolean
}


local ConfigsController = {}

function ConfigsController.save(file_name: string, config: any)
	if not isfolder(`Nurysium`) then
		makefolder(`Nurysium`)
	end

	if not isfolder(`Nurysium/configs`) then
		makefolder(`Nurysium/configs`)
	end

	local flags = HttpService:JSONEncode(config)

	writefile(`Nurysium/configs/{file_name}.json`, flags)
end

function ConfigsController.load(file_name: any, config: any)
	if not isfile('Nurysium/configs/' .. file_name .. '.json') then
		ConfigsController.save(file_name, config)

		return
	end

	local flags = readfile('Nurysium/configs/' .. file_name .. '.json')

	if not flags then
		ConfigsController.save(file_name, config)

		return
	end

	return HttpService:JSONDecode(flags)
end

local current_config = ConfigsController.load(game.GameId, Library.flags)
Library.flags = current_config

local UIManager = {}

function UIManager.refresh_tabs(Tab: TextButton)
	TweenService:Create(Tab, TweenInfo.new(0.7, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {
		BackgroundTransparency = 0
	}):Play()

	local Title = Tab:FindFirstChild('Title')
	local Icon = Tab:FindFirstChild('Icon')

	TweenService:Create(Title, TweenInfo.new(1, Enum.EasingStyle.Exponential), {
		TextTransparency = 0
	}):Play()

	TweenService:Create(Icon, TweenInfo.new(1, Enum.EasingStyle.Exponential), {
		ImageTransparency = 0
	}):Play()

	for _, object in Library.ui.Background.Tabs:GetChildren() do
		if object:IsA('TextButton') and object ~= Tab then
			TweenService:Create(object, TweenInfo.new(0.25, Enum.EasingStyle.Exponential, Enum.EasingDirection.Out), {
				BackgroundTransparency = 1
			}):Play()

			TweenService:Create(object.Title, TweenInfo.new(0.85, Enum.EasingStyle.Exponential), {
				TextTransparency = 0.8
			}):Play()

			TweenService:Create(object.Icon, TweenInfo.new(0.85, Enum.EasingStyle.Exponential), {
				ImageTransparency = 0.8
			}):Play()
		end
	end
end

function UIManager.refresh_sections(right_section: ScrollingFrame, left_section: ScrollingFrame)
	for _, object in Library.ui.Background.Sections:GetChildren() do
		if object == left_section or object == right_section then
			object.Visible = true

			continue
		end

		object.Visible = false
	end
end

function UIManager.animate_sections(right_section: ScrollingFrame, left_section: ScrollingFrame)
	local right_list_layout = right_section:FindFirstChildOfClass('UIListLayout')
	local left_list_layout = left_section:FindFirstChildOfClass('UIListLayout')

	right_list_layout.Padding = UDim.new(0, -6)
	left_list_layout.Padding = UDim.new(0, -6)

	TweenService:Create(right_list_layout, TweenInfo.new(0.4, Enum.EasingStyle.Back), {
		Padding = UDim.new(0, 6)
	}):Play()

	TweenService:Create(left_list_layout, TweenInfo.new(0.4, Enum.EasingStyle.Back), {
		Padding = UDim.new(0, 6)
	}):Play()
end

function Library:get_screen_scale()
	if Library.disconnected then
		return
	end

	local viewport_size_x = workspace.CurrentCamera.ViewportSize.X
	local viewport_size_y = workspace.CurrentCamera.ViewportSize.Y

	local screen_size = (viewport_size_x + viewport_size_y) / 2200

	if Library.mobile then
		screen_size = (viewport_size_x + viewport_size_y) / 7000
	end

	Library.scale = screen_size + math.max(0.65 - screen_size, 0)
end

function Library:changed()
	Library.ui.AncestryChanged:Once(self)
end

function Library.normalize_size()	
	Library.scale_cooldown = true

	task.spawn(function()
		if Library.disconnected then
			return
		end

		TweenService:Create(Library.ui.Background.DisconnectIcon, TweenInfo.new(0.55, Enum.EasingStyle.Back, Enum.EasingDirection.InOut), {
			ImageTransparency = 1,
			Rotation = 180
		}):Play()
	end)

	if not Library.open then
		Library.scale = 0.01

		TweenService:Create(Library.ui.Background.UIScale, TweenInfo.new(0.65, Enum.EasingStyle.Back, Enum.EasingDirection.InOut), {
			Scale = Library.scale
		}):Play()

		task.delay(0.6, function()
			Library.ui.Enabled = false
		end)

		task.delay(1, function()
			Library.scale_cooldown = false
		end)

		return
	end

	Library.get_screen_scale()

	TweenService:Create(Library.ui.Background.UIScale, TweenInfo.new(0.95, Enum.EasingStyle.Back), {
		Scale = Library.scale
	}):Play()

	Library.ui.Enabled = true

	task.delay(1, function()
		Library.scale_cooldown = false
	end)
end

UserInputService.InputBegan:Connect(function(input: InputObject, event: boolean)
	if Library.disconnected then
		return
	end

	if input.KeyCode ~= Enum.KeyCode.RightShift then
		return
	end

	if Library.scale_cooldown then
		return
	end

	if event then
		return
	end

	Library.open = not Library.open
	Library.can_be_optimized = not Library.open

	Library.normalize_size()

end)

function Library:create()
	local old_ui = self.parent:FindFirstChild(self.name)

	if old_ui then
		Debris:AddItem(old_ui, 0)
	end

	local Nurysium = Instance.new("ScreenGui")
	local Background = Instance.new("Frame")
	local UICorner = Instance.new("UICorner")
	local UIScale = Instance.new("UIScale")
	local Tabs = Instance.new("ScrollingFrame")
	local UIListLayout = Instance.new("UIListLayout")

	local optimized_folder = Instance.new('Folder', Nurysium)
	optimized_folder.Name = 'Optimized'

	local Sections_folder = Instance.new("Folder")

	Nurysium.Name = self.name
	Nurysium.Parent = self.parent
	Nurysium.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	Background.Name = "Background"
	Background.Parent = Nurysium
	Background.Active = true
	Background.AnchorPoint = Vector2.new(0.5, 0.5)
	Background.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
	Background.BackgroundTransparency = 0.015
	Background.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Background.BorderSizePixel = 0
	Background.Position = UDim2.new(0.5, 0, 0.5, 0)
	Background.Size = UDim2.new(0, 640, 0, 355)

	UICorner.CornerRadius = UDim.new(0, 10)
	UICorner.Parent = Background

	UIScale.Parent = Background
	UIScale.Scale = 0.01

	Tabs.Name = "Tabs"
	Tabs.Parent = Background
	Tabs.Active = true
	Tabs.AnchorPoint = Vector2.new(0.5, 0.5)
	Tabs.BackgroundColor3 = Color3.fromRGB(162, 162, 162)
	Tabs.BackgroundTransparency = 1.000
	Tabs.BorderColor3 = Color3.fromRGB(255, 255, 255)
	Tabs.BorderSizePixel = 0
	Tabs.Position = UDim2.new(0.132933617, 0, 0.498037577, 0)
	Tabs.Size = UDim2.new(0, 138, 0, 308)
	Tabs.ScrollBarImageColor3 = Color3.fromRGB(0, 0, 0)
	Tabs.BottomImage = ""
	Tabs.MidImage = ""
	Tabs.ScrollBarThickness = 0
	Tabs.TopImage = ""
	Tabs.CanvasSize = UDim2.new(0, 0, 0, 0)

	UIListLayout.Parent = Tabs
	UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
	UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
	UIListLayout.Padding = UDim.new(0, 6)

	Sections_folder.Name = 'Sections'
	Sections_folder.Parent = Background

	Library.ui = Nurysium

	local DisconnectIcon = Instance.new("ImageLabel")
	local DisconnectIcon_UIScale = Instance.new("UIScale")

	DisconnectIcon.Name = "DisconnectIcon"
	DisconnectIcon.Parent = Background
	DisconnectIcon.AnchorPoint = Vector2.new(0.5, 0.5)
	DisconnectIcon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	DisconnectIcon.BackgroundTransparency = 1.000
	DisconnectIcon.BorderColor3 = Color3.fromRGB(0, 0, 0)
	DisconnectIcon.BorderSizePixel = 0
	DisconnectIcon.Position = UDim2.new(0.5, 0, 0.498278558, 0)
	DisconnectIcon.Rotation = 180.000
	DisconnectIcon.Size = UDim2.new(0, 50, 0, 50)
	DisconnectIcon.Image = "rbxassetid://102151842256737"
	DisconnectIcon.ImageTransparency = 1.000

	DisconnectIcon_UIScale.Parent = DisconnectIcon

	local Safemode = Instance.new("TextButton")
	local Title = Instance.new("TextLabel")
	local Icon = Instance.new("ImageLabel")
	local Safemode_UICorner = Instance.new("UICorner")

	Safemode.Name = "Safemode"
	Safemode.Parent = Background
	Safemode.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
	Safemode.BackgroundTransparency = 0.015
	Safemode.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Safemode.BorderSizePixel = 0
	Safemode.Position = UDim2.new(0.391105562, 0, 1.04384315, 0)
	Safemode.Size = UDim2.new(0, 138, 0, 27)
	Safemode.Text = ""
	Safemode.TextColor3 = Color3.fromRGB(0, 0, 0)
	Safemode.TextSize = 1.000
	Safemode.TextTransparency = 1.000
	Safemode.TextWrapped = true

	Title.Name = "Title"
	Title.Parent = Safemode
	Title.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	Title.BackgroundTransparency = 1.000
	Title.BorderColor3 = Color3.fromRGB(0, 0, 0)
	Title.BorderSizePixel = 0
	Title.Position = UDim2.new(0.229, 0, 0.278, 0)
	Title.Size = UDim2.new(0, 75, 0, 12)
	Title.FontFace = Font.new('rbxasset://fonts/families/GothamSSm.json', Enum.FontWeight.SemiBold, Enum.FontStyle.Normal)
	Title.Text = "Safe Mode"
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.TextScaled = true
	Title.TextSize = 14
	Title.TextWrapped = true

	Safemode_UICorner.CornerRadius = UDim.new(0, 6)
	Safemode_UICorner.Parent = Safemode

	Safemode.MouseEnter:Connect(function()
		if Library.disconnected then
			return
		end

		TweenService:Create(DisconnectIcon, TweenInfo.new(0.45, Enum.EasingStyle.Exponential, Enum.EasingDirection.InOut), {
			ImageTransparency = 0.5,
			Rotation = 0
		}):Play()
	end)

	Safemode.MouseLeave:Connect(function()
		if Library.disconnected then
			return
		end

		TweenService:Create(DisconnectIcon, TweenInfo.new(0.45, Enum.EasingStyle.Back, Enum.EasingDirection.InOut), {
			ImageTransparency = 1,
			Rotation = 180
		}):Play()
	end)

	Safemode.MouseButton1Click:Connect(function()
		if Library.disconnected then
			return
		end

		Library.disconnected = true

		TweenService:Create(DisconnectIcon, TweenInfo.new(0.35, Enum.EasingStyle.Exponential, Enum.EasingDirection.InOut), {
			ImageTransparency = 1,
			Rotation = 90
		}):Play()

		task.delay(0.35, function()
			DisconnectIcon.Image = 'rbxassetid://121830702067948'

			TweenService:Create(DisconnectIcon, TweenInfo.new(0.35, Enum.EasingStyle.Back, Enum.EasingDirection.InOut), {
				ImageTransparency = 0.8,
				Rotation = 360
			}):Play()
		end)

		TweenService:Create(DisconnectIcon_UIScale, TweenInfo.new(0.25, Enum.EasingStyle.Back, Enum.EasingDirection.InOut), {
			Scale = 1.5
		}):Play()

		task.delay(2, function()
			TweenService:Create(DisconnectIcon_UIScale, TweenInfo.new(0.45, Enum.EasingStyle.Back, Enum.EasingDirection.InOut), {
				Scale = 0.5
			}):Play()

			TweenService:Create(DisconnectIcon, TweenInfo.new(0.45, Enum.EasingStyle.Exponential, Enum.EasingDirection.InOut), {
				ImageTransparency = 1,
				Rotation = 180
			}):Play()
		end)

		task.delay(2, function()
			Library.open = not Library.open
			Library.normalize_size()

			task.delay(1, function()
				Debris:AddItem(Nurysium, 0)
				Connections.abadone()
			end)
		end)
	end)

	Safemode.TouchTap:Connect(function()
		if Library.disconnected then
			return
		end

		Library.disconnected = true

		TweenService:Create(DisconnectIcon, TweenInfo.new(0.35, Enum.EasingStyle.Exponential, Enum.EasingDirection.InOut), {
			ImageTransparency = 1,
			Rotation = 90
		}):Play()

		task.delay(0.35, function()
			DisconnectIcon.Image = 'rbxassetid://121830702067948'

			TweenService:Create(DisconnectIcon, TweenInfo.new(0.35, Enum.EasingStyle.Back, Enum.EasingDirection.InOut), {
				ImageTransparency = 0.8,
				Rotation = 360
			}):Play()
		end)

		TweenService:Create(DisconnectIcon_UIScale, TweenInfo.new(0.25, Enum.EasingStyle.Back, Enum.EasingDirection.InOut), {
			Scale = 1.5
		}):Play()

		task.delay(2, function()
			TweenService:Create(DisconnectIcon_UIScale, TweenInfo.new(0.45, Enum.EasingStyle.Back, Enum.EasingDirection.InOut), {
				Scale = 0.5
			}):Play()

			TweenService:Create(DisconnectIcon, TweenInfo.new(0.45, Enum.EasingStyle.Exponential, Enum.EasingDirection.InOut), {
				ImageTransparency = 1,
				Rotation = 180
			}):Play()
		end)

		task.delay(2, function()
			Library.open = not Library.open
			Library.normalize_size()

			task.delay(1, function()
				Debris:AddItem(Nurysium, 0)
				Connections.abadone()
			end)
		end)
	end)

	Library.changed(function()
		table.clear(Library.flags)
		Connections.abadone()

		Library.disconnected = true
	end)

	Library.normalize_size()

	Connections['ui_render'] = workspace.CurrentCamera:GetPropertyChangedSignal('ViewportSize'):Connect(function()
		Library.normalize_size()
	end)
			end

			return SettingsController
		end

		return ModuleController
	end

	return TabsController
end

return Library
